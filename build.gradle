
apply plugin: 'idea'

version = '0.0.1'
def jcommanderVersion = ''

if (!('release' in gradle.startParameter.taskNames)) {
    // we compile against 1.48 normally, to match what's in AOSP, but switch to a newer version
    // for release, because it has some fixes required when running on Android
    jcommanderVersion = 'com.beust:jcommander:1.48'

    def versionSuffix
    try {
        def git = org.eclipse.jgit.api.Git.open(file('.'))
        def head = git.getRepository().getRef('HEAD')
        versionSuffix = head.getObjectId().abbreviate(8).name()

        if (!git.status().call().clean) {
            versionSuffix += '-dirty'
        }
    } catch (Exception) {
        // In case we can't get the commit for some reason,
        // just use -dev
        versionSuffix = 'dev'
    }

    version += "-${versionSuffix}"
} else {
    jcommanderVersion = 'com.beust:jcommander:1.64'
}

// Note: please don't use this. This is strictly for the official releases
// that are posted on, e.g. the bitbucket download page.
task release() {
}

task(install).doLast {
    println "Installing version: ${version}"
}

// The projects that get pushed to maven
def maven_release_projects = ['dexdumper']

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'idea'

    if (JavaVersion.current().isJava8Compatible()) {
        allprojects {
            tasks.withType(Javadoc) {
                options.addStringOption('Xdoclint:none', '-quiet')
            }
        }
    }

    version = parent.version

    java {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    ext {
        depends = [
                guava: 'com.google.guava:guava:27.1-android',
                findbugs: 'com.google.code.findbugs:jsr305:1.3.9',
                junit: 'junit:junit:4.12',
                mockito: 'org.mockito:mockito-core:1.10.19',
                antlr_runtime: 'org.antlr:antlr-runtime:3.5.2',
                antlr: 'org.antlr:antlr:3.5.2',
                stringtemplate: 'org.antlr:stringtemplate:3.2.1',
                jflex_plugin: 'org.xbib.gradle.plugin:gradle-plugin-jflex:1.1.0',
                proguard_gradle: 'net.sf.proguard:proguard-gradle:6.2.2',
                dx: 'com.google.android.tools:dx:1.7',
                gson: 'com.google.code.gson:gson:2.3.1',
                jcommander: jcommanderVersion,
                dexlib2: 'org.smali:dexlib2:2.5.2'
        ]
    }

    repositories {
        mavenCentral()
    }
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.eclipse.jgit:org.eclipse.jgit:2.0.0.201206130900-r'
    }
}

wrapper {
    gradleVersion = '6.8.2'
    distributionType = Wrapper.DistributionType.ALL
}
